/// <reference path="../../../types/@react-navigation/core.d.ts" />
import * as React from 'react';
import { ViewStyle, TextStyle } from 'react-native';
import { ThemeContext } from '@react-navigation/core';
import { Scene, Route } from '../types';
export declare type ThemedColor = {
    light: string;
    dark: string;
};
export declare type Props = {
    items: Route[];
    activeItemKey?: string | null;
    activeTintColor?: string | ThemedColor;
    activeBackgroundColor?: string | ThemedColor;
    inactiveTintColor?: string | ThemedColor;
    inactiveBackgroundColor?: string | ThemedColor;
    getLabel: (scene: Scene) => React.ReactNode;
    renderIcon: (scene: Scene) => React.ReactNode;
    onItemPress: (scene: {
        route: Route;
        focused: boolean;
    }) => void;
    itemsContainerStyle?: ViewStyle;
    itemStyle?: ViewStyle;
    labelStyle?: TextStyle;
    activeLabelStyle?: TextStyle;
    inactiveLabelStyle?: TextStyle;
    iconContainerStyle?: ViewStyle;
    drawerPosition: 'left' | 'right';
};
/**
 * Component that renders the navigation list in the drawer.
 */
export default class DrawerNavigatorItems extends React.Component<Props, any> {
    static defaultProps: {
        activeTintColor: {
            light: string;
            dark: string;
        };
        activeBackgroundColor: {
            light: string;
            dark: string;
        };
        inactiveTintColor: {
            light: string;
            dark: string;
        };
        inactiveBackgroundColor: {
            light: string;
            dark: string;
        };
    };
    static contextType: React.Context<import("@react-navigation/core").SupportedThemes>;
    context: React.ContextType<typeof ThemeContext>;
    private getActiveTintColor;
    private getInactiveTintColor;
    private getActiveBackgroundColor;
    private getInactiveBackgroundColor;
    render(): JSX.Element;
}
